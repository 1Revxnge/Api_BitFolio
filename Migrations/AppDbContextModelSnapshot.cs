// <auto-generated />
using System;
using ApiJobfy.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiJobfy.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ApiJobfy.models.Administrador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Aprovado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateOnly?>("DtAprovacao")
                        .HasColumnType("date");

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("datetime(6)");

                    b.Property<DateOnly>("DtNascimento")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("NegocioId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Salario")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Administradores");
                });

            modelBuilder.Entity("ApiJobfy.models.Candidato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<byte[]>("CurriculoCriptografado")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<DateTime>("DtAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DtCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateOnly>("DtNascimento")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("SenhaHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Candidatos");
                });

            modelBuilder.Entity("ApiJobfy.models.CodigoRecuperacaoSenha", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("ExpiraEm")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Utilizado")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("CodigosRecuperacaoSenha");
                });

            modelBuilder.Entity("ApiJobfy.models.Empresas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("DtAprovacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("EnderecoId")
                        .HasColumnType("int");

                    b.Property<string>("LogoUrl")
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("ApiJobfy.models.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Complemento")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DtAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DtCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Endereco");
                });

            modelBuilder.Entity("ApiJobfy.models.Funcionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateOnly>("DtAdmissao")
                        .HasColumnType("date");

                    b.Property<DateTime>("DtAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DtCriacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateOnly?>("DtDemissao")
                        .HasColumnType("date");

                    b.Property<DateOnly>("DtNascimento")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("NegocioId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("Salario")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("StatusFunc")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Funcionarios");
                });

            modelBuilder.Entity("ApiJobfy.models.LogAdministrador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Acao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("AdministradorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DtAcao")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("AdministradorId");

                    b.ToTable("LogAdministrador");
                });

            modelBuilder.Entity("ApiJobfy.models.LogCandidato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Acao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("CandidatoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataAcao")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("CandidatoId");

                    b.ToTable("LogCandidatos");
                });

            modelBuilder.Entity("ApiJobfy.models.LogFuncionarios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Acao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DtAcao")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("FuncionarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId");

                    b.ToTable("LogFuncionarios");
                });

            modelBuilder.Entity("ApiJobfy.models.Permissoes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CandidatoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DtPermissao")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NomePermissao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CandidatoId");

                    b.ToTable("Permissoes");
                });

            modelBuilder.Entity("ApiJobfy.models.Vagas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Ativo")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Beneficios")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DtAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DtCadastro")
                        .HasColumnType("datetime(6)");

                    b.Property<TimeOnly>("DtFim")
                        .HasColumnType("time(6)");

                    b.Property<TimeOnly>("DtInicio")
                        .HasColumnType("time(6)");

                    b.Property<string>("Escolaridade")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Localizacao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Modalidade")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("NegocioId")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<string>("Requisitos")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("NegocioId");

                    b.ToTable("Vagas");
                });

            modelBuilder.Entity("CandidatoVagas", b =>
                {
                    b.Property<int>("CandidatosInscritosId")
                        .HasColumnType("int");

                    b.Property<int>("VagasInscritasId")
                        .HasColumnType("int");

                    b.HasKey("CandidatosInscritosId", "VagasInscritasId");

                    b.HasIndex("VagasInscritasId");

                    b.ToTable("CandidatosVagas", (string)null);
                });

            modelBuilder.Entity("ApiJobfy.models.Empresas", b =>
                {
                    b.HasOne("ApiJobfy.models.Endereco", "Endereco")
                        .WithMany("Empresas")
                        .HasForeignKey("EnderecoId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("ApiJobfy.models.LogAdministrador", b =>
                {
                    b.HasOne("ApiJobfy.models.Administrador", "Administrador")
                        .WithMany("LogAdministradores")
                        .HasForeignKey("AdministradorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Administrador");
                });

            modelBuilder.Entity("ApiJobfy.models.LogCandidato", b =>
                {
                    b.HasOne("ApiJobfy.models.Candidato", "Candidato")
                        .WithMany("LogCandidatos")
                        .HasForeignKey("CandidatoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidato");
                });

            modelBuilder.Entity("ApiJobfy.models.LogFuncionarios", b =>
                {
                    b.HasOne("ApiJobfy.models.Funcionario", "Funcionario")
                        .WithMany("LogFuncionarios")
                        .HasForeignKey("FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Funcionario");
                });

            modelBuilder.Entity("ApiJobfy.models.Permissoes", b =>
                {
                    b.HasOne("ApiJobfy.models.Candidato", "Candidato")
                        .WithMany("Permissoes")
                        .HasForeignKey("CandidatoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidato");
                });

            modelBuilder.Entity("ApiJobfy.models.Vagas", b =>
                {
                    b.HasOne("ApiJobfy.models.Empresas", "Empresa")
                        .WithMany("Vagas")
                        .HasForeignKey("NegocioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("CandidatoVagas", b =>
                {
                    b.HasOne("ApiJobfy.models.Candidato", null)
                        .WithMany()
                        .HasForeignKey("CandidatosInscritosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiJobfy.models.Vagas", null)
                        .WithMany()
                        .HasForeignKey("VagasInscritasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ApiJobfy.models.Administrador", b =>
                {
                    b.Navigation("LogAdministradores");
                });

            modelBuilder.Entity("ApiJobfy.models.Candidato", b =>
                {
                    b.Navigation("LogCandidatos");

                    b.Navigation("Permissoes");
                });

            modelBuilder.Entity("ApiJobfy.models.Empresas", b =>
                {
                    b.Navigation("Vagas");
                });

            modelBuilder.Entity("ApiJobfy.models.Endereco", b =>
                {
                    b.Navigation("Empresas");
                });

            modelBuilder.Entity("ApiJobfy.models.Funcionario", b =>
                {
                    b.Navigation("LogFuncionarios");
                });
#pragma warning restore 612, 618
        }
    }
}
